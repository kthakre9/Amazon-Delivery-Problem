/*
 * BrowseProducts.java
 *
 * Created on October 10, 2008, 9:10 AM
 */
package UserInterface.EmployeeRole;

import Business.EcoSystem;
import Business.Order.MasterOrderCatalog;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Product.Product;
import Business.Supplier.Supplier;
import Business.Supplier.SupplierDirectory;
import UserInterface.CustomerRole.ViewInvoiceJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Rushabh
 */
public class BrowseProductsJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    SupplierDirectory supplierDir;
    MasterOrderCatalog masterOrderCatalog;
    Order order = new Order();
    EcoSystem system;
   
    
   

    /** Creates new form BrowseProducts */
    public BrowseProductsJPanel(JPanel userProcessContainer, SupplierDirectory supplierDir, MasterOrderCatalog masterOrderCatalog, EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.supplierDir=supplierDir;
        this.masterOrderCatalog=masterOrderCatalog;
        this.system=system;
        
      
        supplierComboBox1.removeAllItems();
        
        for(Supplier s: supplierDir.getSupplierList()){
            supplierComboBox1.addItem(s);
        }
        
        
        populateOrderItemsTable();
    }
    private void populateOrderItemsTable()
    {
        DefaultTableModel model = (DefaultTableModel)orderItemsjTable.getModel();
        model.setRowCount(0);
        for(OrderItem oi : order.getOrderItemList())
        {
            Object row[] = new Object[3];
            row[0] = oi.getProduct();
            row[1] = oi.getQuantity();
            row[2] = oi.getProduct().getActualPrice();
            model.addRow(row);
        }
    }

    
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        backjButton1 = new javax.swing.JButton();
        viewProdjButton2 = new javax.swing.JButton();
        quantityjSpinner = new javax.swing.JSpinner();
        addToCartjButton = new javax.swing.JButton();
        checkOutjButton = new javax.swing.JButton();
        totalPricejTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderItemsjTable = new javax.swing.JTable();
        supplierComboBox1 = new javax.swing.JComboBox();

        setPreferredSize(new java.awt.Dimension(750, 511));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Supplier");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 110, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Supplier Product Catalog");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 240, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Browse Products");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, -1, -1));

        viewProdjButton2.setText("View Product Detail");
        viewProdjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProdjButton2ActionPerformed(evt);
            }
        });
        add(viewProdjButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, 160, -1));
        add(quantityjSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, 46, -1));

        addToCartjButton.setText("Add To Cart");
        addToCartjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartjButtonActionPerformed(evt);
            }
        });
        add(addToCartjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 320, -1, -1));

        checkOutjButton.setText("Checkout");
        checkOutjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutjButtonActionPerformed(evt);
            }
        });
        add(checkOutjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 320, 100, -1));
        add(totalPricejTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 350, 79, -1));

        jLabel5.setText("Total Price:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, -1, -1));

        productTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Model No.", "Target Price", "Availability"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productTable1.setMinimumSize(new java.awt.Dimension(45, 64));
        productTable1.setPreferredSize(new java.awt.Dimension(225, 64));
        jScrollPane1.setViewportView(productTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 590, 100));

        orderItemsjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Quantity", "Actual Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderItemsjTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 580, 97));

        supplierComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierComboBox1ActionPerformed(evt);
            }
        });
        add(supplierComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 220, 30));
    }// </editor-fold>//GEN-END:initComponents

    
    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void viewProdjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProdjButton2ActionPerformed
        
        int selectedRow = productTable1.getSelectedRow();
        if(selectedRow < 0){
            return;
        }
        Product product = (Product) productTable1.getValueAt(selectedRow, 0);
        
        ViewProductDetailJPanel vjp = new ViewProductDetailJPanel(userProcessContainer, product);
        userProcessContainer.add("ViewProductDetailJPanel", vjp);
        CardLayout layout =(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
        
    }//GEN-LAST:event_viewProdjButton2ActionPerformed

    private void addToCartjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartjButtonActionPerformed
        
        int quantity = (int)quantityjSpinner.getValue();
        int selectedRow = productTable1.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        Product product = (Product)productTable1.getValueAt(selectedRow, 0);
        
        OrderItem oi = order.addOrderItem();
        oi.setProduct(product);
        oi.setQuantity(quantity);
        
        populateOrderItemsTable();
        totalPricejTextField.setText(String.valueOf(order.totalPrice()));
        
    }//GEN-LAST:event_addToCartjButtonActionPerformed

     int calculateCommission(){
        float cost = 0;
        for(OrderItem oi : order.getOrderItemList()){
            cost+= (oi.getProduct().getTargetPrice() - oi.getProduct().getActualPrice()*0.5);
        }
        return (int)cost;
    }
    
    private void checkOutjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutjButtonActionPerformed
        
        masterOrderCatalog.addOrder(order);
        order = new Order();
        populateOrderItemsTable();
        
        ViewInvoiceJPanel ijp = new ViewInvoiceJPanel(userProcessContainer, masterOrderCatalog, system.getInvoiceDirectory());
        userProcessContainer.add("InvoiceJPanel", ijp);
        CardLayout cardLayout = (CardLayout)userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);
    }//GEN-LAST:event_checkOutjButtonActionPerformed

    private void supplierComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierComboBox1ActionPerformed
        // TODO add your handling code here:
        
         Supplier selectedSupplier = (Supplier) supplierComboBox1.getSelectedItem();
        if(selectedSupplier == null){
            return;
        }
        
        int rowCount = productTable1.getRowCount();
        for(int i=rowCount-1; i>=0; i--){
            ((DefaultTableModel)productTable1.getModel()).removeRow(i);
        }
        
        
        for(Product p: selectedSupplier.getProductCatalog().getProductList()){
            Object row[] = new Object[4];
            row[0] = p;
            row[1] = p.getProductId();
            row[2] = p.getTargetPrice();
            row[3] = p.getAvailability();
            
            ((DefaultTableModel)productTable1.getModel()).addRow(row);  
        }
    }//GEN-LAST:event_supplierComboBox1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToCartjButton;
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton checkOutjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderItemsjTable;
    private javax.swing.JTable productTable1;
    private javax.swing.JSpinner quantityjSpinner;
    private javax.swing.JComboBox supplierComboBox1;
    private javax.swing.JTextField totalPricejTextField;
    private javax.swing.JButton viewProdjButton2;
    // End of variables declaration//GEN-END:variables
}
