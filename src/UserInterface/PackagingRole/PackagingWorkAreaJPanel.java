/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PackagingRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.ShippingManagementOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PackagingWorkRequest;
import Business.WorkQueue.ShippingWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ketki
 */
public class PackagingWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Organization organization;
    private Enterprise business;
    private UserAccount userAccount;
    /**
     * Creates new form PackagingWorkAreaJPanel
     */
    public PackagingWorkAreaJPanel(JPanel userProcessContainer, Organization organization, UserAccount userAcccount, Enterprise business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAcccount;
        this.business = business;
        this.organization = organization;
        populateTable();
    }
    
     private void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel)labAssistantjTable.getModel();
        model.setRowCount(0);
        
        for(WorkRequest workRequest : organization.getWorkQueue().getWorkRequestList())
        {
            Object[] row = new Object[5];
            row[0] = workRequest;
            row[1] = workRequest.getSender().getEmployee().getName();
          
            UserAccount receiver = workRequest.getReceiver();
            row[2]= receiver == null ? "" :receiver.getEmployee().getName();
            
         //   row[2] = workRequest.getReciever().getEmployee().getName();
            row[3] = workRequest.getStatus();
            row[4] = ((PackagingWorkRequest)workRequest).getMessage();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        labAssistantjTable = new javax.swing.JTable();
        assigntoMejButton = new javax.swing.JButton();
        processRequestjButton = new javax.swing.JButton();
        backjButton5 = new javax.swing.JButton();
        proceedPackagingjButton = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        labAssistantjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Reciever", "Status", "Test Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(labAssistantjTable);

        assigntoMejButton.setText("Assign to Me");
        assigntoMejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assigntoMejButtonActionPerformed(evt);
            }
        });

        processRequestjButton.setText("Process Request");
        processRequestjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processRequestjButtonActionPerformed(evt);
            }
        });

        backjButton5.setText("<< Back");
        backjButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton5ActionPerformed(evt);
            }
        });

        proceedPackagingjButton.setText("Proceed to Shipping");
        proceedPackagingjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedPackagingjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(backjButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
                .addComponent(proceedPackagingjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 53, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(83, 83, 83)
                            .addComponent(assigntoMejButton)
                            .addGap(87, 87, 87)
                            .addComponent(processRequestjButton)))
                    .addGap(0, 54, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(296, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(proceedPackagingjButton)
                        .addGap(75, 75, 75))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backjButton5)
                        .addGap(87, 87, 87))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 84, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(43, 43, 43)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(assigntoMejButton)
                        .addComponent(processRequestjButton))
                    .addGap(0, 154, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assigntoMejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assigntoMejButtonActionPerformed
        // TODO add your handling code here:

        int selectedRow = labAssistantjTable.getSelectedRow();
        if(selectedRow < 0)
        {
            return;
        }

        WorkRequest workRequest = (WorkRequest) labAssistantjTable.getValueAt(selectedRow, 0);
        workRequest.setReceiver(userAccount);
        workRequest.setStatus("Pending");

        populateTable();
    }//GEN-LAST:event_assigntoMejButtonActionPerformed

    private void processRequestjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processRequestjButtonActionPerformed
        // TODO add your handling code here:

        int selectedRow = labAssistantjTable.getSelectedRow();
        if(selectedRow < 0)
        {
            return;
        }

        WorkRequest workRequest = (WorkRequest) labAssistantjTable.getValueAt(selectedRow, 0);
        workRequest.setStatus("Processing");

        PackagingProcessRequestJPanel prjp = new PackagingProcessRequestJPanel(workRequest, userProcessContainer);
        CardLayout cardLayout = (CardLayout)userProcessContainer.getLayout();
        userProcessContainer.add("ProcessRequestJPanel", prjp);
        cardLayout.next(userProcessContainer);

        populateTable();
    }//GEN-LAST:event_processRequestjButtonActionPerformed

    private void backjButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton5ActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton5ActionPerformed

    private void proceedPackagingjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedPackagingjButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = labAssistantjTable.getSelectedRow();
        if(selectedRow < 0)
        {
            return;
        }

        WorkRequest workRequest = (WorkRequest) labAssistantjTable.getValueAt(selectedRow, 0);

        ShippingWorkRequest shippingWorkRequest = new ShippingWorkRequest();
        shippingWorkRequest.setSender(userAccount);
        shippingWorkRequest.setStatus("Sent");

        Organization shippingOrganization = null;
        for(Organization o : business.getOrganizationDirectory().getOrganizationList())
        {
            if(o instanceof ShippingManagementOrganization)
            {
                shippingOrganization = o;
            }
        }

        shippingOrganization.getWorkQueue().getWorkRequestList().add(shippingWorkRequest);
        userAccount.getWorkQueue().getWorkRequestList().add(shippingWorkRequest);
    }//GEN-LAST:event_proceedPackagingjButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assigntoMejButton;
    private javax.swing.JButton backjButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable labAssistantjTable;
    private javax.swing.JButton proceedPackagingjButton;
    private javax.swing.JButton processRequestjButton;
    // End of variables declaration//GEN-END:variables
}
